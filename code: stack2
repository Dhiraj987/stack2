
import java.util.Scanner;


public class STACK {
    public int capacity;
    public int arr[];
    public int top;
    STACK(int size){
        capacity=size;
        arr= new int[size];
        top=-1;
    }
    public void push(int x){
        if(isFull()){
            System.out.println("Overflow error");
            System.exit(1);
        }
        arr[++top]=x;
    }
    public int pop(){
        if(isEmpty()){
            System.out.println("Underflow error ");
        }
        return(arr[top--]);
    }
    public int peek(){
        if(isEmpty())
            System.out.println("Underflow Error");
           return arr[top];
    }
    public boolean isEmpty(){
        return top==-1;
    }
    public int size()
    {
    return top-1;
    }
    public boolean isFull(){
        return capacity ==top-1;
    }
    public static void main(String[] args){
        STACK stack =new STACK(100);
        System.out.println("Enter the variable");
        Scanner in=new Scanner(System.in);
        String inputted= in.next();
        char[] con =new char[inputted.length()];
        for(int j=0; j<inputted.length()-1;j++){  
        con[j] = inputted.charAt(j);  
            }
        int i=0;
        for( i=0; i<con.length;i++){
            if(con[i]==')'|| con[i]=='}'|| con[i]==']'){
                break;
            }
           }
        for(int j=0; j<i;j++){
            if(con[j]=='('|| con[j]=='{'|| con[j]=='['){
                stack.push(con[j]);
            }
           }
        int k=i;
        do{
            if(con[k]==')'|| con[k]=='}'|| con[k]==']'){
                if (con[k]==')' && stack.peek()=='('){
                    stack.pop();
                    k++;
                    break;}
                else if (con[k]=='}'&& stack.peek()=='{'){
                    stack.pop();
                     k++;
                break; }
                else if (stack.peek()=='[' && con[k]==']'){
                    stack.pop();
                    k++;
                break;}
                else{
                    System.out.println("No match");
                    break;
                }
            }
    }
        while (k<con.length);
    }
    }
